/*
Copyright 2022 Gravitational, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package protocol

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/require"
)

func FuzzMongoRead(f *testing.F) {
	f.Add([]byte{})
	f.Add([]byte(" \x00\x00\x0000000000\xdc\a\x00\x000000000\xca\x010000000"))
	f.Add([]byte(" \x00\x00\x0000000000\xdd\a\x00\x000000\x01000\x8e0000000000000"))
	f.Add([]byte(" \x00\x00\x0000000000\xdd\a\x00\x00000000000\x01\x02\x00\x00\x0000"))
	f.Add([]byte(" \x00\x00\x0000000000\xdd\a\x00\x00000000000\x01\x01\x00\x00\x0000"))
	f.Add([]byte("0\x00\x00\x0000000000\x01\x00\x00\x0000000000000000000000\x03\x00\x00\x00\x00\x00\x00\x000000"))
	f.Add([]byte(" \x00\x00\x0000000000\xd2\a\x00\x000000\x00\x00\x00\x00\x00\x00000000"))
	f.Add([]byte("000\xa4000000000000"))
	f.Add([]byte("0\x00\x00\x0000@00000\x01\x00\x00\x000000000000000000000\x01\x00\x00\x00\x0000000000"))
	f.Add([]byte(" \x00\x00\x0000000000\xdd\a\x00\x00000000000000\x01000"))
	f.Add([]byte{0x3f, 0x2d, 0x0, 0x0, 0x0, 0xf7, 0xfe, 0x0, 0xff, 0xff, 0xff, 0x29, 0xff, 0xdc, 0x7, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x71, 0x1, 0xff, 0xff, 0x2e, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xb4,
		0x1a, 0x54, 0x6d, 0xff, 0xff, 0x0, 0xff, 0x53, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x6, 0x36,
		0xd0, 0x4, 0x0, 0x84, 0x0, 0x0, 0x4, 0x29, 0x0})
	f.Add([]byte{0x1d, 0x1d, 0x0, 0x0, 0x0, 0x0, 0x2f, 0x0, 0x0, 0x30, 0x13, 0x0, 0x0, 0xdc, 0x7, 0x0, 0x0, 0x30, 0x20,
		0x1d, 0x1d, 0x3, 0x0, 0x0, 0x0, 0x1, 0xff, 0xff, 0xff, 0x65, 0x0, 0xe2, 0xff, 0xff, 0xe2, 0x1d, 0x0, 0x0})
	f.Add([]byte{0x7e, 0x1c, 0x0, 0x0, 0x0, 0x0, 0xd3, 0xc3, 0xd1, 0x26, 0x0, 0xfd, 0xa5, 0xdd, 0x7, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0xa6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa5, 0xa5, 0xa5,
		0x7, 0x0, 0x0, 0xa5, 0xff, 0x9, 0x0, 0x0, 0xa5, 0xa5, 0x2a, 0xa5, 0xa5, 0x0, 0x0, 0x0, 0xa5, 0x10, 0xa5, 0xd3,
		0xc3, 0xd1, 0x26, 0x0, 0xfd, 0xa5})
	f.Add([]byte{0x42, 0x42, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x9, 0x0, 0x0, 0x0, 0x0, 0xdd, 0x7, 0x0, 0x0, 0x13, 0xa9,
		0x29, 0x13, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0xa9, 0x2,
		0xa, 0x16, 0x60, 0x56, 0x56, 0x56, 0xff, 0xa9, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0xa9, 0xa9, 0x0, 0xdc,
		0x7, 0x0, 0x0, 0xd4, 0x7, 0x0, 0x0, 0x11, 0x0, 0x92, 0x76, 0x76, 0xa9, 0x76, 0x76})
	f.Add([]byte{0x1c, 0x1a, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdd, 0x7, 0x0, 0x0, 0x12, 0x0, 0x0,
		0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x26, 0x0, 0x80, 0xa, 0x0, 0x0, 0x15, 0x0, 0x0, 0x0})
	f.Add([]byte{0x30, 0x30, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1, 0x0, 0x0, 0x0, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x2f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x4, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0})
	f.Add([]byte{0x60, 0x2a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x11, 0x0, 0x0, 0xaa, 0xdc, 0x7, 0x0, 0x0, 0x0, 0x0,
		0x68, 0x0, 0x11, 0x1, 0x0, 0x3f, 0x1, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5,
		0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5,
		0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5,
		0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0xf5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x3b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfb, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0xa4})
	f.Add([]byte{0x43, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x30, 0x30, 0xd2, 0x7, 0x0, 0x0, 0x1, 0x10,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c,
		0x3c, 0x3c, 0x3c, 0xb})
	f.Add([]byte{0x47, 0x47, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x13, 0x1, 0x0, 0x0, 0x0, 0xbf, 0xbf,
		0xbf, 0xbf, 0xbf, 0xbf, 0xbf, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb,
		0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x1, 0x0, 0x0, 0x4e, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x20, 0x32, 0x1, 0x1, 0xff, 0x81, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff,
		0xff, 0xff, 0xff, 0xff, 0xff})
	f.Add([]byte{0x30, 0x1d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0xdd, 0x7, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0xd6, 0x7, 0x0, 0x0, 0xfe, 0x1d, 0x0, 0x3a, 0x0, 0x0, 0x3a, 0x3a, 0x3a,
		0x31, 0x3a, 0x3a, 0x2a, 0x3a, 0x3a, 0x3a, 0x3a, 0x3a, 0x0, 0x7a, 0x0})
	f.Add([]byte{0x26, 0x24, 0x00, 0x00, 0x00, 0xdd, 0xff, 0xc7, 0xff, 0xff, 0xde, 0xff,
		0xf6, 0xdd, 0x07, 0x00, 0x00, 0x23, 0xad, 0x00, 0x39, 0x01, 0x00, 0x07,
		0xd7, 0x8e, 0x7e, 0xdf, 0x50, 0x00, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x26,
		0x24, 0xe2, 0xff, 0xff, 0x06, 0xd6, 0xff, 0x77, 0x10, 0x00,
	})

	f.Fuzz(func(t *testing.T, msgBytes []byte) {
		msg := bytes.NewReader(msgBytes)

		require.NotPanics(t, func() {
			_, _ = ReadMessage(msg)
		})
	})
}
